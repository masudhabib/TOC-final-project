//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /Users/chinmaykelkar/Code/Harrisburg/Theory of Computation/FinalProject/FinalProject/calculator.g4 by ANTLR 4.9.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="calculatorParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.1")]
[System.CLSCompliant(false)]
public interface IcalculatorListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="calculatorParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStart([NotNull] calculatorParser.StartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="calculatorParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStart([NotNull] calculatorParser.StartContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>parentheses</c>
	/// labeled alternative in <see cref="calculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParentheses([NotNull] calculatorParser.ParenthesesContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>parentheses</c>
	/// labeled alternative in <see cref="calculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParentheses([NotNull] calculatorParser.ParenthesesContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>square</c>
	/// labeled alternative in <see cref="calculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSquare([NotNull] calculatorParser.SquareContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>square</c>
	/// labeled alternative in <see cref="calculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSquare([NotNull] calculatorParser.SquareContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>number</c>
	/// labeled alternative in <see cref="calculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumber([NotNull] calculatorParser.NumberContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>number</c>
	/// labeled alternative in <see cref="calculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumber([NotNull] calculatorParser.NumberContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>log</c>
	/// labeled alternative in <see cref="calculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLog([NotNull] calculatorParser.LogContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>log</c>
	/// labeled alternative in <see cref="calculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLog([NotNull] calculatorParser.LogContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>addSubtract</c>
	/// labeled alternative in <see cref="calculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddSubtract([NotNull] calculatorParser.AddSubtractContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>addSubtract</c>
	/// labeled alternative in <see cref="calculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddSubtract([NotNull] calculatorParser.AddSubtractContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>squareRoot</c>
	/// labeled alternative in <see cref="calculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSquareRoot([NotNull] calculatorParser.SquareRootContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>squareRoot</c>
	/// labeled alternative in <see cref="calculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSquareRoot([NotNull] calculatorParser.SquareRootContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>trigFunctions</c>
	/// labeled alternative in <see cref="calculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTrigFunctions([NotNull] calculatorParser.TrigFunctionsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>trigFunctions</c>
	/// labeled alternative in <see cref="calculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTrigFunctions([NotNull] calculatorParser.TrigFunctionsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>mulDivideMod</c>
	/// labeled alternative in <see cref="calculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMulDivideMod([NotNull] calculatorParser.MulDivideModContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>mulDivideMod</c>
	/// labeled alternative in <see cref="calculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMulDivideMod([NotNull] calculatorParser.MulDivideModContext context);
}
